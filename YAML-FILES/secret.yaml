apiVersion: v1
kind: Secret
metadata:
  name: app-secret
type: Opaque
data:
  username: YWRtaW4=     # admin (base64 encoded)
  password: cGFzc3dvcmQ= # password

# 🔍 Explanation of Fields:
#   Field	                              Purpose
# kind: Secret	           Declares this as a Kubernetes Secret
# type: Opaque	           Standard type for arbitrary key-value pairs
# data:	                   Values must be base64-encoded strings

# 📌 Decode Example:
# echo YWRtaW4= | base64 --decode   # outputs: admin

# To create one from CLI:
# kubectl create secret generic app-secret \
#   --from-literal=username=admin \
#   --from-literal=password=password


# 🔐 What Is a Secret?
# A Secret in Kubernetes is an object used to store sensitive data, like 
# passwords, tokens, or SSH keys, in an encoded (not encrypted) format.

# 🧠 Why Use a Secret?
# Keeps sensitive data separate from code and config
# Prevents credentials from being hardcoded in YAML or containers
# Can be mounted as environment variables or files

# 🛡️ Important Notes:
# Secrets are only base64 encoded, not encrypted by default (use tools like Sealed Secrets or external secret managers for encryption at rest).
# Kubernetes can encrypt secrets at rest with proper setup.
# RBAC controls should limit who can view or change secrets.

